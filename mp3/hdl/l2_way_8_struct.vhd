-- VHDL Entity ece411.L2_Way_8.symbol
--
-- Created:
--          by - draguna1.ews (gelib-057-22.ews.illinois.edu)
--          at - 22:14:29 04/24/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all; 
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY L2_Way_8 IS
   PORT( 
      DataIn    : IN     LC3b_oword;
      DataWrite : IN     std_logic;
      Dirtify   : IN     std_logic;
      Index     : IN     LC3b_L2_index;
      RESET_L   : IN     std_logic;
      Tag       : IN     LC3b_L2_tag;
      Dirty     : OUT    std_logic;
      Hit       : OUT    std_logic;
      LineOut   : OUT    LC3b_oword;
      StoreAddr : OUT    LC3b_word
   );

-- Declarations

END L2_Way_8 ;

--
-- VHDL Architecture ece411.L2_Way_8.struct
--
-- Created:
--          by - draguna1.ews (gelib-057-22.ews.illinois.edu)
--          at - 22:14:30 04/24/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all; 
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;


ARCHITECTURE struct OF L2_Way_8 IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL F        : STD_LOGIC;
   SIGNAL TagOut   : LC3b_L2_tag;
   SIGNAL ValidOut : std_logic;


   -- Component Declarations
   COMPONENT AND2
   PORT (
      A : IN     std_logic ;
      B : IN     std_logic ;
      F : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT COMP8
   PORT (
      A : IN     LC3B_BYTE ;
      B : IN     LC3B_BYTE ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT L2AddrRejoin
   PORT (
      Index       : IN     LC3b_L2_Index ;
      LineAddress : OUT    LC3b_Word ;
      Tag         : IN     LC3b_L2_Tag 
   );
   END COMPONENT;
   COMPONENT L2DataArray
   PORT (
      DataIn    : IN     LC3b_oword ;
      DataWrite : IN     std_logic ;
      Index     : IN     LC3b_L2_index ;
      RESET_L   : IN     std_logic ;
      LineOut   : OUT    LC3b_oword 
   );
   END COMPONENT;
   COMPONENT L2DirtyArray
   PORT (
      DataWrite : IN     std_logic ;
      Dirtify   : IN     std_logic ;
      Index     : IN     LC3b_L2_index ;
      RESET_L   : IN     std_logic ;
      Dirty     : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT L2TagArray
   PORT (
      DataWrite : IN     std_logic ;
      Index     : IN     LC3b_L2_index ;
      RESET_L   : IN     std_logic ;
      Tag       : IN     LC3b_L2_tag ;
      TagOut    : OUT    LC3b_L2_tag 
   );
   END COMPONENT;
   COMPONENT L2ValidArray
   PORT (
      DataWrite : IN     std_logic ;
      Index     : IN     LC3b_L2_index ;
      RESET_L   : IN     std_logic ;
      ValidOut  : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : AND2 USE ENTITY ece411.AND2;
   FOR ALL : COMP8 USE ENTITY ece411.COMP8;
   FOR ALL : L2AddrRejoin USE ENTITY ece411.L2AddrRejoin;
   FOR ALL : L2DataArray USE ENTITY ece411.L2DataArray;
   FOR ALL : L2DirtyArray USE ENTITY ece411.L2DirtyArray;
   FOR ALL : L2TagArray USE ENTITY ece411.L2TagArray;
   FOR ALL : L2ValidArray USE ENTITY ece411.L2ValidArray;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_4 : AND2
      PORT MAP (
         A => F,
         B => ValidOut,
         F => Hit
      );
   U_5 : COMP8
      PORT MAP (
         A => TagOut,
         B => Tag,
         F => F
      );
   U_6 : L2AddrRejoin
      PORT MAP (
         Index       => Index,
         LineAddress => StoreAddr,
         Tag         => TagOut
      );
   U_3 : L2DataArray
      PORT MAP (
         DataIn    => DataIn,
         DataWrite => DataWrite,
         Index     => Index,
         RESET_L   => RESET_L,
         LineOut   => LineOut
      );
   U_1 : L2DirtyArray
      PORT MAP (
         DataWrite => DataWrite,
         Dirtify   => Dirtify,
         Index     => Index,
         RESET_L   => RESET_L,
         Dirty     => Dirty
      );
   U_2 : L2TagArray
      PORT MAP (
         DataWrite => DataWrite,
         Index     => Index,
         RESET_L   => RESET_L,
         Tag       => Tag,
         TagOut    => TagOut
      );
   U_0 : L2ValidArray
      PORT MAP (
         DataWrite => DataWrite,
         Index     => Index,
         RESET_L   => RESET_L,
         ValidOut  => ValidOut
      );

END struct;
